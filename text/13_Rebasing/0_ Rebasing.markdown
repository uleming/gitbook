## Rebasing ##

Предположим вы создаете ветку "mywork" на удаленной-отслеживаемой ветке "origin".

    $ git checkout -b mywork origin

[fig:rebase0]

Терерь вы проделываете некоторую работу, создающую два новых коммита.

    $ vi file.txt
    $ git commit
    $ vi otherfile.txt
    $ git commit
    ...
    
Тем временем, некто еще проделываает некоторую работу создающую два новых коммита в ветке origin. Это означает обе 'origin' и 'mywork' продивинулись вперед, что означает что ветки отклонились друг от друга.

[fig:rebase1]

В этот момент, вы можете выполнить "pull" чтобы слить ваши изменения обратно, результат создаст новый слитый коммит, след. образом:

[fig:rebase2]

Тем не менее, если вы предпочитаете держить историю в mywork простую серию коммитов без каких либо слияний, вы можете вместо этого использовать
linkgit:git-rebase[1]:

    $ git checkout mywork
    $ git rebase origin

Это удалит каждый ваш коммит из mywork, временно сохранив  их как патчи (в директории под именем ".git/rebase"), и обновит mywork до точки в послденней версии origin, затеи применит каждый сохраненный ранее патч с новому mywork.  

[fig:rebase3]

Как только ссылка ('mywork') обновлена и указывает на новые созданные коммит объекты, ваши ранние коммиты будут отменены. Они будут скорее всего удалены если вы выполните сборку мусора. (просмотрите linkgit:git-gc[1])

[fig:rebase4]

Таким образом мы теперь можем взглянуть на разницу в вашей истории между выполнением rebase и merge:

[fig:rebase5]

В процессе rebase, возможно обнаружатся конфликты. В этом случае он остановится и позволит вам устранить конфликты; после чего, выполните "git-add" чтобы обновить директорию заморозки этоиго содержимого, и затем, вместо выполнения git-commit, просто запустите

    $ git rebase --continue

и git продолжит налагать оставшиеся патчи.

В любой момент вы можете использовать параметр `--abort` чтобы оборвать это процесс и вернуть mywork к тому состоянию в котором она была до того как вы начали процесс rebase:

    $ git rebase --abort


[gitcast:c7-rebase]("GitCast #7: Rebasing")
